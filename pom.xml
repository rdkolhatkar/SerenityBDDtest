<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.gradle</groupId>
    <artifactId>SerenityBDDtest</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- Define dependency versions here -->
        <sereniyCore.version>4.1.20</sereniyCore.version>
        <serenityJunit.version>4.1.20</serenityJunit.version>
        <Junit.version>4.13.2</Junit.version>
        <assertJ.version>3.8.0</assertJ.version>
        <LogBack.version>1.5.6</LogBack.version>
        <lombok.version>1.18.32</lombok.version>
        <hamcrest.version>3.0</hamcrest.version>
        <testng.version>7.10.2</testng.version>
        <junitJupiterApi.version>5.11.0</junitJupiterApi.version>
        <junitJupiterEngine>5.11.0</junitJupiterEngine>

        <mavenSurefirePlugin.version>2.22.2</mavenSurefirePlugin.version>
        <buildHelperMavenPlugin.version>3.6.0</buildHelperMavenPlugin.version>
        <mavenCompilerPlugin.version>3.13.0</mavenCompilerPlugin.version>
        <mavenResourcesPlugin.version>3.3.1</mavenResourcesPlugin.version>
    </properties>

    <repositories>
        <repository>
            <id>central</id>
            <url>https://repo.maven.apache.org/maven2</url>
        </repository>
        <repository>
            <id>serenity-repo</id>
            <url>https://dl.bintray.com/serenity/maven/</url>
        </repository>
    </repositories>

    <dependencies>

        <!-- https://mvnrepository.com/artifact/net.serenity-bdd/serenity-core -->
        <dependency>
            <groupId>net.serenity-bdd</groupId>
            <artifactId>serenity-core</artifactId>
            <version>${sereniyCore.version}</version>
            <scope>compile</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/net.serenity-bdd/serenity-junit -->
        <dependency>
            <groupId>net.serenity-bdd</groupId>
            <artifactId>serenity-junit</artifactId>
            <version>${serenityJunit.version}</version>
            <scope>compile</scope> <!-- Add this scope compile to configure serenity classpath in sec/main/java -->
        </dependency>
        <!-- https://mvnrepository.com/artifact/junit/junit -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${Junit.version}</version>
            <scope>compile</scope>
        </dependency>
        <!-- To add Junit classpath for src/main/java directory implement the following dependencies -->
        <!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junitJupiterApi.version}</version> <!-- Use the latest version -->
            <scope>compile</scope> <!-- Make JUnit available in src/main -->
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-engine -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junitJupiterEngine}</version>
            <scope>compile</scope> <!-- Needed to run JUnit tests from main -->
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.assertj/assertj-core -->
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertJ.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/ch.qos.logback/logback-classic -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${LogBack.version}</version>
            <scope>compile</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.projectlombok/lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.hamcrest/hamcrest -->
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest</artifactId>
            <version>${hamcrest.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>${testng.version}</version>
            <scope>compile</scope>
        </dependency>

    </dependencies>

    <build>
        <sourceDirectory>src/main/java</sourceDirectory>
        <testSourceDirectory>src/test/java</testSourceDirectory>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>${buildHelperMavenPlugin.version}</version>
                <executions>
                    <execution>
                        <id>add-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                            <goal>add-test-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>src/bdd/java</source>
                            </sources>
                            <testSources>
                                <testSource>src/bdd/java</testSource>
                            </testSources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>net.serenity-bdd.maven.plugins</groupId>
                <artifactId>serenity-maven-plugin</artifactId>
                <version>${sereniyCore.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>aggregate</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Additional source sets for BDD -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${mavenCompilerPlugin.version}</version>
                <configuration>
                    <source>17</source> <!-- Adjust Java version -->
                    <target>17</target>
                </configuration>
            </plugin>
            <!-- Configure Surefire to include BDD tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${mavenSurefirePlugin.version}</version>
                <configuration>
                    <!-- Include BDD tests -->
                    <additionalClasspathElements>
                        <additionalClasspathElement>${project.basedir}/src/bdd/java</additionalClasspathElement>
                    </additionalClasspathElements>
                    <includes>
                        <include>**/bdd/**/*.java</include> <!-- BDD test pattern -->
                    </includes>
                </configuration>
            </plugin>
            <!-- Resource plugin for the BDD resources -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${mavenResourcesPlugin.version}</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/classes</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/bdd/resources</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>